//Code for # ESP 32
#include <WiFi.h>
#include <WebSocketsServer.h>
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

// Wi-Fi Credentials
const char* ssid = "Your_WiFi_Name";
const char* password = "Your_WiFi_Password";

// WebSocket server on port 81
WebSocketsServer webSocket = WebSocketsServer(81);

// PCA9685 Servo Driver
Adafruit_PWMServoDriver pca = Adafruit_PWMServoDriver(0x40);  // I2C address

// Servo limits (adjust based on calibration)
#define SERVOMIN  120   // Minimum pulse length
#define SERVOMAX  550   // Maximum pulse length

// Servo Channels (Adjust based on your wiring)
#define BASE_ROTATION 0
#define VERTICAL_MOVEMENT 1
#define JOINT_HORIZONTAL 2
#define GRABBER 3

// Convert angle (0-180) to pulse width for PCA9685
int angleToPulse(int angle) {
  return map(angle, 0, 180, SERVOMIN, SERVOMAX);
}

// WebSocket message handler
void webSocketEvent(uint8_t num, WStype_t type, uint8_t *payload, size_t length) {
  if (type == WStype_TEXT) {
    String data = (char*)payload;

    // Parse JSON format: {"base":90, "vertical":45, "joint":60, "grabber":30}
    int baseAngle = data.substring(data.indexOf("base") + 6, data.indexOf(",", data.indexOf("base"))).toInt();
    int verticalAngle = data.substring(data.indexOf("vertical") + 9, data.indexOf(",", data.indexOf("vertical"))).toInt();
    int jointAngle = data.substring(data.indexOf("joint") + 7, data.indexOf(",", data.indexOf("joint"))).toInt();
    int grabberAngle = data.substring(data.indexOf("grabber") + 9, data.length() - 1).toInt();

    // Move servos
    pca.setPWM(BASE_ROTATION, 0, angleToPulse(baseAngle));
    pca.setPWM(VERTICAL_MOVEMENT, 0, angleToPulse(verticalAngle));
    pca.setPWM(JOINT_HORIZONTAL, 0, angleToPulse(jointAngle));
    pca.setPWM(GRABBER, 0, angleToPulse(grabberAngle));
  }
}

void setup() {
  Serial.begin(115200);
  
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi!");

  // Start WebSocket
